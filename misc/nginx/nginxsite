##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#

server {
	listen   80 default_server; ## listen for ipv4; this line is default and implied
	return 301 https://$server_name$request_uri;
}
server {
	listen 443 ssl;

	root /var/www/;
	index index.html index.htm;

	# Make site accessible from http://localhost/
	server_name localhost;
        
        location /wsgireadonly {
            include              uwsgi_params;
            uwsgi_pass           unix:///tmp/uwsgireadonly.sock; 
            uwsgi_param SCRIPT_NAME /wsgireadonly; 
        }
        location /wsgiactions {
            include              uwsgi_params;
            uwsgi_pass           unix:///tmp/uwsgiactions.sock;
            uwsgi_param SCRIPT_NAME /wsgiactions; 
        }
        location /wsgisessioncontrol {
            include              uwsgi_params;
            uwsgi_pass           unix:///tmp/uwsgisessioncontrol.sock; 
            uwsgi_param SCRIPT_NAME /wsgisessioncontrol"; 
        }
	location / {
		# Uncomment to enable naxsi on this location
		# include /etc/nginx/naxsi.rules

                rewrite ^/auth/login$ /auth/login.php last;
                rewrite ^/auth/loginmobile$ /auth/loginmobile.php last;
                rewrite ^/auth/signup$ /auth/signup.php last;
                rewrite ^/auth/manage$ /auth/manage.php last;
                rewrite ^/auth/change$ /auth/change.php last;
                #rewrite ^/auth/change/([a-f0-9]{32})$ /auth/change.php?key=$1 last;
                #rewrite ^/auth/activate/([a-f0-9]{32})$ /auth/user.php?activate=$1 last;
                rewrite ^/auth/logout$ /auth/user.php?logout last;
                rewrite ^/auth/auth$ /auth/auth.php last;

		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ /index.html;
	}

	location /doc/ {
		alias /usr/share/doc/;
		autoindex on;
		allow 127.0.0.1;
		allow ::1;
		deny all;
	}

	# Only for nginx-naxsi used with nginx-naxsi-ui : process denied requests
	#location /RequestDenied {
	#	proxy_pass http://127.0.0.1:8080;    
	#}

	#error_page 404 /404.html;

	# redirect server error pages to the static page /50x.html
	#
	#error_page 500 502 503 504 /50x.html;
	#location = /50x.html {
	#	root /usr/share/nginx/www;
	#}

	# pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
	#
	location ~ .php$ {
		#fastcgi_split_path_info ^(.+\.php)(/.+)$;
		# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		# With php5-fpm:
		fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
		# fastcgi_pass unix:/var/run/php5-fpm.sock;
		fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
	}
	location ~ .html$ {
	        fastcgi_split_path_info ^(.+\.php)(/.+)$;
	# NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		# With php5-fpm:
		fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
		fastcgi_index index.html;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		include fastcgi_params;
	}


	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#	listen 8000;
#	listen somename:8080;
#	server_name somename alias another.alias;
#	root html;
#	index index.html index.htm;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}


# HTTPS server
#
#server {
#	listen 443;
#	server_name localhost;
#
#	root html;
#	index index.html index.htm;
#
#	ssl on;
#	ssl_certificate cert.pem;
#	ssl_certificate_key cert.key;
#
#	ssl_session_timeout 5m;
#
#	ssl_protocols SSLv3 TLSv1;
#	ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
#	ssl_prefer_server_ciphers on;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
